{"version":3,"file":"app/es5/let.js","sources":["app/es5/let.js"],"names":[],"mappings":"AAAA;AAAA,CAAA,OAAQ,CAAC,mBAAmB,CAAE,UAAS;AAEtC,CAAA,GAAE,CAAC,gBAAgB,CAAE,UAAS;OAEzB,CAAA,GAAG,aAAI,CAAC,CAAC,CAAA,CAAC;YAAK,CAAA,CAAC,EAAG,EAAC;MAAA;AACxB,CAAA,SAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;GAEzB,CAAC,CAAC;CAEH,CAAC,CAAC;AAGH,CAAA,OAAQ,CAAC,eAAe,CAAE,UAAS;AAElC,CAAA,GAAE,CAAC,wCAAwC,CAAE,UAAS;gBAExC,UAAS,IAAI;CACzB,SAAG,IAAI;;;;aACE,EAAC;CACT,eAAO,EAAC,CAAC;;OACT;KAED;AAEG,CAAJ,MAAI,CAAA,MAAM,EAAG,CAAA,MAAM,CAAC,IAAI,CAAC,CAAC;AAC1B,CAAA,SAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;GACvB,CAAC,CAAC;AAGH,CAAA,GAAE,CAAC,qCAAqC,CAAE,UAAS;OACxC,CAAA,CAAC,EAAG,UAAS;gBACV,UAAS,IAAI;;;;;cACf,EAAC;gBAAE,KAAE,GAAE,CAAE,KAAG;;;;;iBAAE;AACX,CAAA,gBAAC,EAAC,EAAC,CAAC;eAChB;;;;;;;CACD,WAAO,EAAC,CAAC;KAET;AAEG,CAAJ,MAAI,CAAA,MAAM,EAAG,CAAA,MAAM,EAAE,CAAC;AACtB,CAAA,SAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;GACvB,CAAC,CAAC;CAEH,CAAC,CAAC;CAAA","sourcesContent":["describe(\"how to run a test\", function(){\r\n\r\n\tit(\"should work...\", function() {\r\n\r\n\t\tlet add = (x,y) => x + y;\r\n\t\texpect(add(5,3)).toBe(8);\r\n\r\n\t});\r\n\r\n});\r\n\r\n\r\ndescribe('how let works', function() {\r\n\r\n\tit('will provide block scoping, unlike var', function() {\r\n\r\n\t\tvar doWork = function(flag) {\r\n\t\t\tif(flag) {\r\n\t\t\t\tlet x = 3;\r\n\t\t\t\treturn x;\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tvar result = doWork(true);\r\n\t\texpect(result).toBe(3);\r\n\t});\r\n\r\n\r\n\tit('will provide block scoping with for', function() {\r\n        let j = undefined;\r\n\t\tvar doWork = function(flag) {\r\n\t\t\tfor(let i=0; i<10; i++) {\r\n                j=i;\r\n\t\t\t}\r\n\t\t\treturn j;\r\n\r\n\t\t};\r\n\r\n\t\tvar result = doWork();\r\n\t\texpect(result).toBe(9);\r\n\t});\r\n\r\n});"]}